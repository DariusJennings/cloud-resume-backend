AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  
  SAM Template for cloud-resume-backend

Globals:
  Api:
    OpenApiVersion: 3.0.1

Resources:

  MyResumeApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: MyResumeApi
      StageName: prod
      Cors: "'*'"
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: ./swagger.yaml

  ResumeFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.7
      InlineCode: |
        import boto3
        import json
        import decimal

        class DecimalEncoder(json.JSONEncoder):
            def default(self, o):
                if isinstance(o, decimal.Decimal):
                    if o % 1 > 0:
                        return float(o)
                    else:
                        return int(o)
                return super(DecimalEncoder, self).default(o)

        def lambda_handler(event, context):
            dynamodb = boto3.client('dynamodb')
            response = dynamodb.update_item(
                TableName = 'visitorcount',
                Key={
                    'siteUrl':{'S':"https://codeandtechresume.com/"}
                },
                UpdateExpression='SET visits = visits + :inc',
                ExpressionAttributeValues={
                    ':inc': {'N': '1'}
                },
                ReturnValues="UPDATED_NEW",
              )
              response['Attributes']['visits']=int(response['Attributes']['visits']['N'])
              return { 
                  "statusCode": 200,
                  "headers": {'Content-Type': 'application/json',
                      'Access-Control-Allow-Origin': '*'
                  },
                  "body": json.dumps(response['Attributes']),
              }

      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - lambda:'*'
              - lambda:InvokeFunction
              - dynamodb:BatchGetItem
              - dynamodb:GetItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:CreateLogGroup
            Resource: '*'

  ResumeDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - 
          AttributeName: 'siteUrl'
          AttributeType: 'S'
      KeySchema:
        - 
          AttributeName: 'siteUrl'
          KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      TableName: 'visitorcount'           

Outputs:

  ResumeApi:
    Description: "API Gateway endpoint URL for Prod stage for Cloud Resume function"
    Value: !Sub "https://${MyResumeApi}.execute-api.${AWS::Region}.amazonaws.com/prod/count"
  ResumeFunction:
    Description: "Cloud Resume Lambda Function ARN"
    Value: !GetAtt ResumeFunction.Arn
  ResumeFunctionIamRole:
    Description: "Implicit IAM Role created for Cloud Resume function"
    Value: !GetAtt ResumeFunctionRole.Arn
  ResumeDBTable:
    Description: "DynamoDB table to store the visitor count"
    Value: !GetAtt ResumeDBTable.Arn
